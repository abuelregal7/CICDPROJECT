# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Description of what the lane does"
  lane :custom_lane do
    print "Fastlane works successfully on iOS"
  end

  #desc: "Releases pur app to app store"
  #lane: release_app do
    #print "put all lanes here"
  #end

  lane :create_app do
    desc "create app in app developer portal and app store connect"
    produce(
      username: 'ahmed.abuelregal@expertapps.com.sa',
      app_identifier: 'com.CICDPROJECT.CICDPROJECT',
      app_name: 'CICDPROJECT',
      language: 'English',
      app_version: '1.0',
      sku: 'CICD_PROJECT',
      team_name: 'INNOVATION DEVELOPMENT FOR INFORMATION TECHNOLOGY', # only necessary when in multiple teams
    )
    end

  desc "Build iOS App"
  lane :buildApp_localy do
  # Run match before gym for code signing on a new machine
  # run match before gym for => if this app run in new machien 
  match(
    type: "appstore",
    readonly: true,
    git_url: "https://github.com/abuelregal7/CICDPROJECT",
    git_branch: "certs"
  )
  
  # Ensure Xcode 15 or later is used
  xcode_version = `xcodebuild -version`.match(/Xcode\s(\d+\.\d+)/)[1]
  raise "Xcode 15 or later is required" if Gem::Version.new(xcode_version) < Gem::Version.new('15.0')

  # Increment the build number
  increment_build_number(
  build_number: "6",      # Specify a custom build number
  xcodeproj: "CICDPROJECT.xcodeproj"  # Path to your Xcode project
  )


  # Build the app
  gym(
    workspace: "CICDPROJECT.xcworkspace", 
    configuration: "Release",
    scheme: "CICDPROJECT",
    #silent: true,
    clean: true,
    output_name: "CICDPROJECT.ipa",       # Specify the name of the .ipa file to generate (including file extension)
    export_method: "app-store"            # or "ad-hoc", "enterprise", "development" based on your distribution method
  )
  end

  desc "To deliver our app"
  lane :upload_app do

    ipa_path = "/Users/ahmedaboal-regal/Desktop/CICDPROJECT/CICDPROJECT.ipa" # Path to the generated IPA file

    # Check if the IPA file exists
    if File.exist?(ipa_path)
      UI.message("IPA file found at path: #{ipa_path}")
    else
      UI.user_error!("IPA file not found at path: #{ipa_path}")
    end

    deliver(
      ipa: ipa_path,
      skip_metadata: true,
      skip_screenshots: true,
      skip_binary_upload: true,
      # skip_app_version_update: true,
      force: true
    )
  end

  desc "Upload build to TestFlight"
  lane :upload_to_testflight do
    ipa_path = "/Users/ahmedaboal-regal/Desktop/CICDPROJECT/CICDPROJECT.ipa" # Path to the generated IPA file

    # Check if the IPA file exists
    if File.exist?(ipa_path)
      UI.message("IPA file found at path: #{ipa_path}")
    else
      UI.user_error!("IPA file not found at path: #{ipa_path}")
    end

    upload_to_testflight(
      ipa: ipa_path # Path to the generated IPA file
      # Credentials will be picked from environment variables or Fastlane credentials manager
    )
  end

end
